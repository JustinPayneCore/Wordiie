@page "/"

<div class="text-center" tabindex="0" @ref="docRef" @onkeydown=" KeyboardEventHandler ">
    <h1 class="display-4">WordIe</h1>
    <p>@guessResult</p>

    @foreach (var item in attemptedGuesses)
    {
        @item
        <br />
    }

    <div>
        <span id="TextInputGuess" type="text"> @guess </span>
    </div>

    @*<div>
        <p id="Attempt2">_____</p>
        <p id="Attempt3">_____</p>
        <p id="Attempt4">_____</p>
        <p id="Attempt5">_____</p>
        <p id="Attempt6">_____</p>
    </div>*@


    @*<div>
            <span id="TextGuess2Char0" type="text"> @KeyPressed </span>
            <span id="TextGuess2Char1" type="text"> @KeyPressed </span>
            <span id="TextGuess2Char2" type="text"> @KeyPressed </span>
            <span id="TextGuess2Char3" type="text"> @KeyPressed </span>
            <span id="TextGuess2Char4" type="text"> @KeyPressed </span>
        </div>

        <div>
            <span id="TextGuess3Char0" type="text"> @KeyPressed </span>
            <span id="TextGuess3Char1" type="text"> @KeyPressed </span>
            <span id="TextGuess3Char2" type="text"> @KeyPressed </span>
            <span id="TextGuess3Char3" type="text"> @KeyPressed </span>
            <span id="TextGuess3Char4" type="text"> @KeyPressed </span>
        </div>

        <div>
            <span id="TextGuess4Char0" type="text"> @KeyPressed </span>
            <span id="TextGuess4Char1" type="text"> @KeyPressed </span>
            <span id="TextGuess4Char2" type="text"> @KeyPressed </span>
            <span id="TextGuess4Char3" type="text"> @KeyPressed </span>
            <span id="TextGuess4Char4" type="text"> @KeyPressed </span>
        </div>

        <div>
            <span id="TextGuess5Char0" type="text"> @KeyPressed </span>
            <span id="TextGuess5Char1" type="text"> @KeyPressed </span>
            <span id="TextGuess5Char2" type="text"> @KeyPressed </span>
            <span id="TextGuess5Char3" type="text"> @KeyPressed </span>
            <span id="TextGuess5Char4" type="text"> @KeyPressed </span>
        </div>

        <div>
            <span id="TextGuess6Char0" type="text"> @KeyPressed </span>
            <span id="TextGuess6Char1" type="text"> @KeyPressed </span>
            <span id="TextGuess6Char2" type="text"> @KeyPressed </span>
            <span id="TextGuess6Char3" type="text"> @KeyPressed </span>
            <span id="TextGuess6Char4" type="text"> @KeyPressed </span>
        </div>*@

    <div>
        @foreach (var i in keyboard_toprow)
        {
            var letter = (char)i;
            <button id="keyboard-@i" type="button" @onclick="@(() => KeyboardButtonPressed_Letter(letter))">@letter</button>
        }

        <br />
        @foreach (var i in keyboard_midrow)
        {
            var letter = (char)i;
            <button id="keyboard-@i" type="button" @onclick="@(() => KeyboardButtonPressed_Letter(letter))">@letter</button>
        }

        <br />

        <button id="KeyboardEnter" @onclick="EnterPressed">Enter</button>

        @foreach (var i in keyboard_botrow)
        {
            var letter = (char)i;
            <button id="keyboard-@i" type="button" @onclick="@(() => KeyboardButtonPressed_Letter(letter))">@letter</button>
        }

        <button id="KeyboardBackspace" @onclick="BackspacePressed">Backspace</button>
    </div>
</div>

@code {

    protected ElementReference myDiv;  // set by the @ref attribute

    private ElementReference docRef;
    string KeyPressed = "";
    string guess = "";
    string guessResult = "";

    ArrayList attemptedGuesses = new ArrayList();

    int[] keyboard_toprow = new int[] { 113, 119, 101, 114, 116, 121, 117, 105, 111, 112 };
    int[] keyboard_midrow = new int[] { 097, 115, 100, 102, 103, 104, 106, 107, 108 };
    int[] keyboard_botrow = new int[] { 122, 120, 099, 118, 098, 110, 109 };

    WordieGame wordieGame = new WordieGame(1);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await docRef.FocusAsync();
        }
    }

    private async Task KeyboardEventHandler(KeyboardEventArgs args)
    {

        KeyPressed = args.Key;

        if (args.Key.Length == 1 && wordieGame.isPlaying)
        {
            char letter = char.Parse(args.Key);
            bool isLetter = char.IsLetter(letter);

            if (isLetter && guess.Length < 5)
            {
                guess += letter;
            }

            Console.WriteLine(guess);
        }


        if (args.Key == "Enter") { await EnterPressed(); }

        if (args.Key == "Backspace") { await BackspacePressed(); }


    }

    protected async Task KeyboardButtonPressed_Letter(char letter)
    {
        KeyPressed = "Key Pressed is " + letter;

        if (guess.Length < 5 && wordieGame.isPlaying)
        {
            guess += letter;
            Console.WriteLine(guess);
        }

    }

    protected async Task EnterPressed()
    {
        KeyPressed = "Key Pressed is enter from EnterPressed()";

        if (guess.Length == 5 && wordieGame.isPlaying)
        {
            Console.WriteLine("enter: inputting guess");
            wordieGame.makeGuess(guess);

            // display result (temporary)
            guessResult = wordieGame.result;

            if (wordieGame.validGuess)
            {
                attemptedGuesses.Add(guess);

                // reset guess
                guess = "";

                CheckGameState();
            }
        }
    }

    protected async Task CheckGameState()
    {
        if (wordieGame.isCorrect)
        {
            guessResult = "You Won!";
            // todo: set up end screen (win)
        }
        else if (!wordieGame.isPlaying)
        {
            guessResult = "You Lose! The correct word was " + wordieGame.answer;
            // todo: set up end screen (lose)
        }


    }


    protected async Task BackspacePressed()
    {
        KeyPressed = "Key Pressed is backspace from BackspacePressed()";
        if (guess.Length > 0)
        {
            guess = guess.Substring(0, guess.Length - 1);
            Console.WriteLine(guess);
        }
    }
}